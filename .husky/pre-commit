#!/bin/sh
# Pre-commit hook to prevent accidental functional changes
# This hook runs before every commit to validate changes

echo "üîç Running pre-commit validation..."

# Get list of staged files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM)

if [ -z "$STAGED_FILES" ]; then
  echo "‚úÖ No staged files, skipping validation"
  exit 0
fi

echo "üìã Checking staged files for forbidden patterns..."

# Check for forbidden patterns in non-styling files
FORBIDDEN_PATTERNS="useState|useEffect|useCallback|useMemo|onClick|onChange|fetch|axios|router\.push|router\.replace"

# Exclude test files, markdown files, and styling files
EXCLUDED_PATTERNS="\.test\.|\.spec\.|\.md$|\.css$|\.scss$|design-tokens|component-patterns"

# Check staged files
VIOLATIONS=$(git diff --cached --name-only | grep -vE "$EXCLUDED_PATTERNS" | xargs grep -E "$FORBIDDEN_PATTERNS" 2>/dev/null | grep -vE "(className|style|//|/\*)" || true)

if [ ! -z "$VIOLATIONS" ]; then
  echo "‚ö†Ô∏è  WARNING: Potential functional changes detected!"
  echo ""
  echo "The following patterns were found that might indicate logic changes:"
  echo "$VIOLATIONS"
  echo ""
  echo "This commit appears to contain functional/logic changes."
  echo "Design changes should be STYLING ONLY (className, style, JSX structure)."
  echo ""
  echo "Are these changes styling-only and safe? (y/N)"
  read -r response
  if [ "$response" != "y" ] && [ "$response" != "Y" ]; then
    echo "‚ùå Commit aborted. Please ensure changes are styling-only."
    exit 1
  fi
fi

# Run tests if test-related files exist
if echo "$STAGED_FILES" | grep -qE "\.(ts|tsx|js|jsx)$"; then
  echo "üß™ Running tests..."
  
  # Only run tests if we're in the frontend directory
  if [ -f "package.json" ] && grep -q "\"test\"" package.json; then
    npm test -- --watchAll=false --passWithNoTests || {
      echo "‚ùå Tests failed. Please fix tests before committing."
      exit 1
    }
  fi
fi

# Check TypeScript if TypeScript files are staged
if echo "$STAGED_FILES" | grep -qE "\.(ts|tsx)$"; then
  echo "üìù Checking TypeScript..."
  
  if [ -f "tsconfig.json" ]; then
    npx tsc --noEmit || {
      echo "‚ùå TypeScript errors found. Please fix before committing."
      exit 1
    }
  fi
fi

# Check ESLint if JS/TS files are staged
if echo "$STAGED_FILES" | grep -qE "\.(ts|tsx|js|jsx)$"; then
  echo "üîç Checking ESLint..."
  
  if [ -f "package.json" ] && grep -q "\"lint\"" package.json; then
    npm run lint -- --fix || {
      echo "‚ö†Ô∏è  ESLint issues found. Review and fix if needed."
      # Don't fail commit on lint warnings, only errors
    }
  fi
fi

echo "‚úÖ Pre-commit validation passed!"
exit 0


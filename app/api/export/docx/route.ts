/**
 * REAL DOCX Export API
 * Generates actual Word documents using docx library
 * No placeholders - real downloadable DOCX files
 */

import { NextRequest, NextResponse } from 'next/server';
import { Document, Packer, Paragraph, TextRun, HeadingLevel, AlignmentType } from 'docx';

interface ExportRequest {
  content: string;
  title: string;
  metadata?: {
    author?: string;
    companyName?: string;
    createdAt?: string;
  };
}

export async function POST(request: NextRequest) {
  console.log('📄 REAL DOCX Export API called');
  
  try {
    const body: ExportRequest = await request.json();
    const { content, title, metadata } = body;
    
    if (!content || !title) {
      return NextResponse.json(
        { error: 'Content and title are required' },
        { status: 400 }
      );
    }

    console.log(`📊 Generating REAL DOCX: "${title}"`);
    
    // Create a real Word document
    const doc = new Document({
      creator: metadata?.author || 'H&S Platform',
      title: title,
      description: 'Business Intelligence Report',
      sections: [{
        properties: {},
        children: [
          // Add company header
          new Paragraph({
            text: metadata?.companyName || 'H&S Revenue Intelligence',
            heading: HeadingLevel.TITLE,
            alignment: AlignmentType.CENTER,
          }),
          
          // Add title
          new Paragraph({
            text: title,
            heading: HeadingLevel.HEADING_1,
            alignment: AlignmentType.CENTER,
            spacing: { after: 400 },
          }),
          
          // Add metadata
          ...(metadata?.createdAt ? [
            new Paragraph({
              children: [
                new TextRun({
                  text: `Generated: ${new Date(metadata.createdAt).toLocaleDateString()}`,
                  size: 20,
                  color: '666666',
                }),
              ],
              alignment: AlignmentType.RIGHT,
              spacing: { after: 400 },
            }),
          ] : []),
          
          // Parse and add content
          ...parseContentToParagraphs(content),
          
          // Add footer
          new Paragraph({
            children: [
              new TextRun({
                text: 'Generated by H&S Revenue Intelligence Platform',
                size: 20,
                color: '999999',
              }),
            ],
            alignment: AlignmentType.CENTER,
            spacing: { before: 800 },
          }),
        ],
      }],
    });

    // Generate the DOCX buffer
    const buffer = await Packer.toBuffer(doc);
    console.log(`✅ Real DOCX generated: ${buffer.length} bytes`);
    
    // Return the actual DOCX file
    return new NextResponse(buffer as BodyInit, {
      status: 200,
      headers: {
        'Content-Type': 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
        'Content-Disposition': `attachment; filename="${title.replace(/[^a-z0-9]/gi, '_')}.docx"`,
        'Content-Length': buffer.length.toString(),
        'X-Real-Export': 'true'
      }
    });
    
  } catch (error: any) {
    console.error('❌ Real DOCX export error:', error);
    
    return NextResponse.json(
      { 
        error: 'DOCX export failed',
        message: error.message,
        real: true
      },
      { status: 500 }
    );
  }
}

// Helper function to parse content into Word paragraphs
function parseContentToParagraphs(content: string): Paragraph[] {
  const lines = content.split('\n');
  const paragraphs: Paragraph[] = [];
  
  lines.forEach(line => {
    if (line.startsWith('# ')) {
      // H1 Header
      paragraphs.push(new Paragraph({
        text: line.substring(2),
        heading: HeadingLevel.HEADING_1,
        spacing: { before: 400, after: 200 },
      }));
    } else if (line.startsWith('## ')) {
      // H2 Header
      paragraphs.push(new Paragraph({
        text: line.substring(3),
        heading: HeadingLevel.HEADING_2,
        spacing: { before: 300, after: 150 },
      }));
    } else if (line.startsWith('### ')) {
      // H3 Header
      paragraphs.push(new Paragraph({
        text: line.substring(4),
        heading: HeadingLevel.HEADING_3,
        spacing: { before: 200, after: 100 },
      }));
    } else if (line.startsWith('- ') || line.startsWith('* ')) {
      // Bullet points
      paragraphs.push(new Paragraph({
        text: line.substring(2),
        bullet: { level: 0 },
        spacing: { after: 100 },
      }));
    } else if (line.trim()) {
      // Regular text
      paragraphs.push(new Paragraph({
        text: line,
        spacing: { after: 200 },
      }));
    }
  });
  
  return paragraphs;
}

// GET endpoint for testing
export async function GET() {
  return NextResponse.json({
    status: 'Real DOCX Export API is running',
    endpoint: '/api/export/docx',
    accepts: {
      content: 'string (required)',
      title: 'string (required)',
      metadata: {
        author: 'string (optional)',
        companyName: 'string (optional)',
        createdAt: 'string (optional)'
      }
    },
    real: true,
    library: 'docx',
    output: 'Real Word documents (.docx)'
  });
}